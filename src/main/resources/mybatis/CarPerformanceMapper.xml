<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rrr.dao.CarPerformanceMapper">

    <resultMap type="com.rrr.model.CarPerformance" id="BaseResultMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="carServiceName" column="car_service_name" jdbcType="VARCHAR"/>
        <result property="carIdxName" column="car_idx_name" jdbcType="VARCHAR"/>
        <result property="carIdxValue" column="car_idx_value" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="getCarIndexNames" resultType="string">
        SELECT DISTINCT
            car_idx_name
        FROM
            car_performance;
    </select>

    <insert id="insert" parameterType="com.rrr.model.CarPerformance">
        INSERT INTO car_performance (car_service_name, car_idx_name, car_idx_value, create_time)
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="carServiceName != null" >
                #{carServiceName,jdbcType=VARCHAR},
            </if>
            <if test="carIdxName != null" >
                #{carIdxName,jdbcType=VARCHAR},
            </if>
            <if test="carIdxValue != null" >
                #{carIdxValue,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <select id="countByName" resultType="integer" parameterType="com.rrr.model.CarPerformance">
        select count(*)
        from car_performance
        where car_service_name = #{carServiceName}
        and car_idx_name = #{carIdxName}
    </select>

    <update id="update" parameterType="com.rrr.model.CarPerformance">
        update car_performance
        set car_idx_value = #{carIdxValue},
        update_time = #{updateTime}
        where car_service_name = #{carServiceName}
        and car_idx_name = #{carIdxName}
    </update>

    <select id="getByIdxName" resultMap="BaseResultMap">
        select id, car_service_name, car_idx_name, car_idx_value, create_time, update_time
        from car_performance
        where car_idx_name = #{carIdxName}
    </select>
</mapper>